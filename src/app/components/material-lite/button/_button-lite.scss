@import 'props';


@mixin use-default-overlay {
  .mat-button-lite-overlay {
    background-color: var(--mbl-ripple);
    opacity: 0;
    transition: opacity map-get($mat-amt-duration, fast) map-get($mat-amt-function, deceleration);
    &:hover { opacity: 0.08; }
  }
}
@mixin disuse-overlay {
  .mat-button-lite-overlay { display: none; }
}

@mixin disuse-ripple {
  .mat-ripple-lite-container { display: none; }
}


@function color-transition() {
  $timing: map-get($mat-amt-duration, slow) map-get($mat-amt-function, angular);
  @return background-color $timing, color $timing;
}

@mixin default-button($transition: true) {
  min-width: 64px;
  min-height: 36px;
  padding: 0 16px;
  border-radius: 4px;

  @if ($transition) {
    transition: color-transition();
  }
}
@mixin round-button($transition: true) {
  padding: 0;
  border-radius: 50%;

  @if ($transition) {
    transition: color-transition();
  }
}

// 以下のcss variableは、後にJSから挿入される
$color: var(--mbl-color); // メインの色
$contrast: var(--mbl-contrast); // 白か黒（淡色）

@mixin button-color-type1 {
  --mbl-ripple: #{$color};
  background-color: transparent;
  color: $color;
}
@mixin button-color-type2 {
  --mbl-ripple: #{$contrast};
  background: $color;
  color: $contrast;
}
.mat-button-lite-default-color-type1 {
  --mbl-ripple: #{$opposite-base} !important;
  --mbl-color: #{$text} !important;
}
.mat-button-lite-default-color-type2 {
  --mbl-ripple: #{$opposite-base} !important;
  --mbl-color:  #{$secondary-container} !important;
  --mbl-contrast: #{$text};
}

.mat-button-lite {
  position: relative;
  user-select: none;
  overflow: hidden;
  font-weight: 500;
}

.mat-button-lite-wrapper {
  @include flex(row, center, center);
}

.mat-basic-button-lite {
  @include button-color-type1;

  @include default-button;
  @include use-default-overlay;
}

.mat-raised-button-lite {
  @include button-color-type2;

  @include default-button(false);
  @include disuse-overlay;

  transition: box-shadow map-get($mat-amt-duration, slow) map-get($mat-amt-function, standard), color-transition();
  &:not(:active) {
    @include mat-elevation(2);
  }
  &:active {
    @include mat-elevation(8);
  }
}

.mat-stroked-button-lite {
  @include button-color-type1;

  @include default-button;

  .mat-button-lite-overlay {
    border: 1px solid var(--theme-opposite-base);
    opacity: 0.12;
    transition: background-color map-get($mat-amt-duration, fast) map-get($mat-amt-function, deceleration);
    &:hover {
      opacity: 0.08;
      background-color: var(--mbl-ripple);
    }
  }
}

.mat-flat-button-lite {
  @include button-color-type2;

  @include default-button;
  @include disuse-overlay;
}


.mat-icon-button-lite {
  @include button-color-type1;
  min-height: 40px; min-width: 40px;

  @include round-button;
  @include disuse-overlay;
}
.mat-fab-button-lite {
  @include button-color-type2;
  min-width: 40px; min-height: 40px;

  transition: box-shadow map-get($mat-amt-duration, slow) map-get($mat-amt-function, standard), color-transition();
  &:not(:active) {
    z-index: $z-resting-fab;
    @include mat-elevation($z-resting-fab);
  }
  &:active {
    z-index: $z-pressed-fab;
    @include mat-elevation($z-pressed-fab);
  }

  @include round-button(false);
  @include disuse-overlay;
}

.mat-disabled-button-lite {
  pointer-events: none;
  background: $disabled-container !important;
  color: $disabled-text !important;
  box-shadow: 0 0 0 0 transparent !important;
  @include disuse-overlay;
}

.mat-ripple-lite-container, .mat-button-lite-overlay {
  width: 100%; height: 100%;
  position: absolute; top: 0; left: 0;
}

